//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Scripts/CharacterController/GameInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @GameInput: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @GameInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""GameInput"",
    ""maps"": [
        {
            ""name"": ""RunnerGameInput"",
            ""id"": ""ca623d45-1c31-4f37-8ce4-b9f630f91d62"",
            ""actions"": [
                {
                    ""name"": ""Input"",
                    ""type"": ""Value"",
                    ""id"": ""bfd3c086-ddaf-4390-8b8c-aaa97881250b"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Keyboard"",
                    ""id"": ""1ed063a5-a6a4-4804-8a67-962f1915618e"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Input"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""4915da4b-a578-4221-b11a-807495800fb2"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Input"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""d62a105b-886b-4d85-9035-8e7aa14317ee"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Input"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""44ea4509-a514-4af5-b823-bd4bc4e9af56"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Input"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""5350a619-bfe0-4629-ae38-84ece7d28117"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Input"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Mobile"",
                    ""id"": ""ab7ec08d-e016-4d51-a2b9-e1a0cfd388c6"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Input"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""7cfd9ee8-cac2-4c6f-92f8-2fd5e573ea06"",
                    ""path"": ""<Touchscreen>/primaryTouch/delta/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Input"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""26e8a8d8-b28a-4f05-b383-9982fdecc966"",
                    ""path"": ""<Touchscreen>/primaryTouch/delta/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Input"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""15a548ab-6cba-4a0c-88b0-6c1826eaf0a0"",
                    ""path"": ""<Touchscreen>/primaryTouch/delta/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Input"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""d5fbf1a7-d8bb-4ee2-aabe-9400f67973a8"",
                    ""path"": ""<Touchscreen>/primaryTouch/delta/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Input"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // RunnerGameInput
        m_RunnerGameInput = asset.FindActionMap("RunnerGameInput", throwIfNotFound: true);
        m_RunnerGameInput_Input = m_RunnerGameInput.FindAction("Input", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // RunnerGameInput
    private readonly InputActionMap m_RunnerGameInput;
    private List<IRunnerGameInputActions> m_RunnerGameInputActionsCallbackInterfaces = new List<IRunnerGameInputActions>();
    private readonly InputAction m_RunnerGameInput_Input;
    public struct RunnerGameInputActions
    {
        private @GameInput m_Wrapper;
        public RunnerGameInputActions(@GameInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Input => m_Wrapper.m_RunnerGameInput_Input;
        public InputActionMap Get() { return m_Wrapper.m_RunnerGameInput; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(RunnerGameInputActions set) { return set.Get(); }
        public void AddCallbacks(IRunnerGameInputActions instance)
        {
            if (instance == null || m_Wrapper.m_RunnerGameInputActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_RunnerGameInputActionsCallbackInterfaces.Add(instance);
            @Input.started += instance.OnInput;
            @Input.performed += instance.OnInput;
            @Input.canceled += instance.OnInput;
        }

        private void UnregisterCallbacks(IRunnerGameInputActions instance)
        {
            @Input.started -= instance.OnInput;
            @Input.performed -= instance.OnInput;
            @Input.canceled -= instance.OnInput;
        }

        public void RemoveCallbacks(IRunnerGameInputActions instance)
        {
            if (m_Wrapper.m_RunnerGameInputActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IRunnerGameInputActions instance)
        {
            foreach (var item in m_Wrapper.m_RunnerGameInputActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_RunnerGameInputActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public RunnerGameInputActions @RunnerGameInput => new RunnerGameInputActions(this);
    public interface IRunnerGameInputActions
    {
        void OnInput(InputAction.CallbackContext context);
    }
}
